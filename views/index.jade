doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(http-equiv='X-UA-Compatibleviewport', content='IE=edge'       )

    title= title

    link(rel='stylesheet' href='/stylesheets/bootstrap.min.css'        )
    link(rel='stylesheet' href='/stylesheets/style.css'                )
    link(rel='stylesheet' href='/stylesheets/search.css'               )

    link(rel='stylesheet' href='/stylesheets/grid/default.css'         )
    link(rel='stylesheet' href='/stylesheets/grid/component.css'       )

    script(src='/javascripts/lib/jquery/jquery.min.js'                 )
    script(src='/javascripts/blazy.min.js'                             )

    script(src='/javascripts/grid/modernizr.custom.js'                 )

    script(data-curl-run='/javascripts/run.js' src='/javascripts/lib/curl/src/curl.js')
    script(type='text/html' id='improvisation-template').
      <ul class="og-grid">
        <% if(files !== undefined && files.length > 0) { %>
          <% $('#uplevel').show() %>
        <% } else { %>
          <% $('#uplevel').hide() %>
        <% } %>

        <% if(typeof dirs != 'undefined' && dirs.length > 0) { %>
          <% _.each(dirs, function(d) { %>
            <li>
              <a href="#/wall/<%= d.name %>">
                <%= d.name %>
                <img
                  src     = "/loader.gif"
                  class   = "lazy"
                  data-src= "<%= d.contents.slice(-1) %>"><br>
              </a>
            </li>
          <% }); %>
          <hr>
        <% } %>
      </ul>

      <ul id="og-grid" class="og-grid"></ul>
    
    script(type='text/html' id='improvisation-grid-template').
      <% if(typeof files != 'undefined') { %>
        <% _.each(files, function(f) { %>
          <li>
            <a
              href            = "<%= f.url %>"
              data-largesrc   = "<%= f.url %>"
              data-title      = "<%= f.url.split('/').pop().split('.').slice(0, -1).join('.') %>"
              data-description= "
                <b>Size:      </b> <%= humanize.filesize(f.size)              %><br>
                <b>MIME:      </b> <%= f.mime                                 %><br>
                <b>Created on:</b> <%= humanize.naturalDay(new Date(f.ctime)) %><br>
                <b>Changed on:</b> <%= humanize.naturalDay(new Date(f.mtime)) %>">
                  <img
                  src     = "/loader.gif"
                  class   = "lazy"
                  data-src= "<%= f.thumb %>">
            </a>
          </li>
        <% }); %>
      <% } %>
  body
    div.navbar.navbar-inverse.navbar-fixed-top(role='navigation')
      div.navbar-header
        a.navbar-brand(href='#')= title
      div.navbar-collapse.collapse
        ul.nav.navbar-nav
          li
            p#uplevel
              a(href="#/wall/../")= 'â†‘ Up a Level'
        ul.nav.navbar-nav.navbar-right
          li#github
            a(href="https://github.com/RoxasShadow/Vasilij" target="_blank")
              img(src="/github.png" width="40" height="40" alt="Vasilij on GitHub")

    div.container(role='main')
      div.contents
        div.row
          div.col-xs-6.col-sm-4

          div.col-xs-6.col-sm-4
            h1#title

          div#search.col-xs-6.col-sm-4
            input.typeahead(type="text" placeholder="Search")

        div.improvisation.main

    script(src='/javascripts/grid/grid.js'                                 )
    script(src='/javascripts/lib/typeahead.js/dist/typeahead.bundle.min.js')
    script.
      $(function() {
        Grid.init();

        var images = new Bloodhound({
          datumTokenizer: Bloodhound.tokenizers.whitespace('value'),
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          remote: {
            url   : '/search/%QUERY',
            filter: function(results) {
              return $.map(results.dirs, function(result) {
                return {
                  dir: result,
                };
              }).concat($.map(results.files, function(result) {
                return {
                  file: result,
                };
              }));
            }
          }
        });

        images.initialize();

        var search = $('#search .typeahead');

        search.typeahead({ highlight: true }, {
          displayKey: function(r) {
            return r.dir || r.file.split('/').pop();
          },
          source: images.ttAdapter(),
          templates: {
            suggestion: function(r) {
              return r.dir ? '<p class="dir">' + r.dir + '</p>' : '<p class="file">' + r.file.split('/').pop() + '</p>';
            }
          }
        });

        $('#search .typeahead').on('typeahead:selected', function(e, r) {
          if(r.dir)
            new Backbone.Router().navigate('#/wall/' + r.dir, { trigger: true });
          else
            window.open(r.file);

          search.typeahead('val', '');
        });
      });